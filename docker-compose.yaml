services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: electric
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5555:5432"
    volumes:
      - ./postgres/postgres.conf:/etc/postgresql.conf:ro
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/00_shared_init.sql:ro
    tmpfs:
      - /var/lib/postgresql/data
      - /tmp
    entrypoint:
      - docker-entrypoint.sh
      - -c
      - config_file=/etc/postgresql.conf
    # https://stackoverflow.com/a/67059603
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  electric:
    image: electricsql/electric:0.9.3
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/electric?sslmode=disable"
      LOG_LEVEL: "info"
      # LOG_LEVEL: "debug"
      ELECTRIC_STORAGE_DIR: "/var/db/electric"
      ELECTRIC_STATSD_HOST: "metric-writer"
      ELECTRIC_TELEMETRY_URL: "http://metric-writer:8125"
    tmpfs:
      - /var/db/electric
      - /tmp
    ports:
      - "3333:3000"
    depends_on:
      postgres:
        condition: service_healthy
      metric-writer:
        condition: service_started

  metric-writer:
    image: electricsql/metric-writer:latest
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/electric?sslmode=disable"
      LOG_LEVEL: "info"
      # LOG_LEVEL: "debug"
      TRY_MIGRATION: "true"
    depends_on:
      postgres:
        condition: service_healthy

  varnish:
    build:
      context: ./varnish
      args:
        BACKEND_HOST: "electric"
        BACKEND_PORT: "3000"
    ports:
      - 8888:8888
    command: ["-a", ":8888"]
    tmpfs:
      - /var/lib/varnish/varnishd:exec
      - /tmp
    depends_on:
      - electric
    ulimits:
      nofile:
        soft: 10000000
        hard: 10000000
      memlock:
        soft: -1
        hard: -1

  clients:
    build:
      context: ./client_load
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/electric?sslmode=disable"
      ELECTRIC_URL: "http://varnish:8888"
      CLIENT_COUNT: "${clients:-1000}"
      CLIENT_WAIT: "5"
    ulimits:
      nofile:
        soft: 10000000
        hard: 10000000
    depends_on:
      postgres:
        condition: service_healthy
      varnish:
        condition: service_started
